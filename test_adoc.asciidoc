PasDoc is a documentation tool for the Object Pascal code
(as implemented by http://www.freepascal.org/[FreePascal] and
http://www.embarcadero.com/products/delphi[Delphi]).
Documentation is generated from comments found in the source code
and from external files.

## Download

Download:

* Stable PasDoc release is at
https://sourceforge.net/projects/pasdoc/files/[Sourceforge download page]. In the future, binary releases will be https://github.com/pasdoc/pasdoc/releases[published as GitHub releases].

* Unstable (automatic build after every commit, published once automatic tests pass) releases are available at link:DevelopmentSnapshots[DevelopmentSnapshots].

You can watch our https://sourceforge.net/p/pasdoc/news/[news page] to be notified about the new releases.

## Usage

See link:WhereToPlaceComments[WhereToPlaceComments],
link:WritingDocumentation[WritingDocumentation] and
link:SupportedTags[SupportedTags] for information on how to document
your source code.

Available output formats are link:HtmlOutput[HTML],
link:HtmlHelp[HtmlHelp], link:LatexOutput[LaTeX],
link:Latex2RtfOutput[Latex2rtf], link:SimpleXmlOutput[SimpleXml].
More output formats may be added in the future.

Check out the link:CommandLine[CommandLine] to get a better feeling
for how PasDoc works. There is also a GUI interface, see
link:PasDocGui[PasDocGui].

Check out link:PasDocAutoDoc[PasDocAutoDoc] and
link:ProjectsUsingPasDoc[ProjectsUsingPasDoc] to see some real-world
examples of how documentation generated by PasDoc looks like, and to see
some programs that use PasDoc's code.

You may also be interested in the list of
link:AdvancedFeatures[AdvancedFeatures] of PasDoc.

## Get involved

https://github.com/orgs/pasdoc/teams/developers[We use GitHub Team Discussions] as our forum. You're welcome to join there, everyone is welcome :)

You can also use the https://github.com/pasdoc/pasdoc/issues[GitHub issues] to report bugs and feature requests. If you would like to contribute, it's best to https://github.com/pasdoc/pasdoc/pulls[submit a pull request using GitHub], although you can also attach a patch file to an issue.

We have also collected some older "wanted features" on the link:WantedFeatures[WantedFeatures] list. And there is a link:ToDo[ToDo] list.

## Development

See the
https://github.com/pasdoc/pasdoc/blob/master/ChangeLog[ChangeLog] for
recent changes to PasDoc and a short history overview.

PasDoc source code:

* PasDoc is licensed under the
http://www.gnu.org/copyleft/gpl.html[GNU General Public License].
* You can get the latest PasDoc sources
https://github.com/pasdoc/pasdoc[from our project on GitHub].
In short, just call
+
----
git clone https://github.com/pasdoc/pasdoc.git
----
+
Alternatively, you can get the same code using SVN. In short, just call
+
----
svn co https://github.com/pasdoc/pasdoc.git/trunk
----
* See link:CompilingPasDoc[CompilingPasDoc] for instructions how to compile PasDoc.
* See link:ReleaseMaking[ReleaseMaking] to know how we test and package PasDoc for final releases.

While developing PasDoc we also developed some link:OtherTools[OtherTools] that you may find useful.

About these web pages:

* We are using wiki to easily update these pages. You are welcome to contribute to the documentation!
* All text within this wiki is licensed on terms of http://www.gnu.org/copyleft/gpl.html[GNU General Public License] (just like PasDoc sources).

For some item types like classes or units you may write very large
descriptions to give an adequate introduction. However, these large
texts are not appropriate in an overview list. Use the abstract tag to
give a short explanation of what an item is about. One row of text is a
good rule of thumb. Of course, there should only be one abstract tag per
description.

Example:

[source,pascal]
----
type
  { @abstract(This class does some very useful thing.)
    With the help of this class you can ...
    (more text that describes how very very
    useful is this class follows). }
  TMyClass = class ...
----

The abstract text will appear in the overview section of the
documentation (if the document format supports this overview section),
and will also appear as the first paragraph of the item full
documentation.

Note that can avoid writing explicit @abstract tag if you use
link:AutoAbstractOption[--auto-abstract command-line option].
