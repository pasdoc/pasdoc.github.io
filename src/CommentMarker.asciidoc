:doctitle: Comment markers

A "comment marker" is a special marker in the comment that marks this
comment for use by link:index[PasDoc]. By default, pasdoc doesn't
require any comment marker: any comment that is placed right before
declaration of some item is automatically incorporated as part of
documentation.

If you prefer to use some markers, you can control it with the following
link:CommandLine[CommandLine] options:

--staronly::
Parse only `{\\**`, `(*\**` and `//*\*` style comments. This is a shortcut for `--marker=**`.
+
Example:
+
[source,pascal]
----
{** This is a pasdoc comment for WriteLn }
procedure WriteLn(const s: string);
----

--marker <marker>::
Parse only `{<marker>`, `(\*<marker>` and `//<marker>` comments.
+
Example using `:` as marker:
+
[source,pascal]
----
{: WriteLn takes a string and writes it to the console
  @param(s is the string to write)
  @returns(true if successfull and false if there is no console window.) }
function WriteLn(const s: string): boolean;
----
+
You can use this option multiple times to specify multiple markers. We will recognize and strip one of the markers (the longest one).

--marker-optional::
Do not require the markers given in `--marker <marker>` but still remove them from the comments if they exist.
+
If you provide multiple markers (using multiple `--marker` options), we will remove the longest one that exists in the comment. For example this source code:
+
[source,pascal]
----
var
  {* Some comment. }
  Marker1: Integer;

  {** Another comment. }
  Marker2: Integer;
----
+
...will be properly processed by this pasdoc command line.
+
----
pasdoc '--marker=*' '--marker=**' --marker-optional test.pas
----
The order of `--marker` options on the command-line should not matter (internally, we sort them, to detect the longest first).